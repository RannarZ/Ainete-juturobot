{"uuid": "94117df6-4e9e-8d28-1620-209a32b7f8ae", "code": "MTAT.03.286", "state": {"code": "confirmed", "et": "Kinnitatud", "en": "confirmed"}, "last_update": "2024-02-05T11:04:36", "title": {"en": "Design and Analysis of Algorithms", "et": "Algoritmide kavandamine ja analüüs"}, "credits": 6, "general": {"input_languages": [{"code": "et", "et": "eesti keel", "en": "Estonian"}], "structural_unit_shares": [{"structural_unit_code": "LTAT04", "structural_unit_name": {"en": "Chair of Security and Theoretical Computer Science", "et": "andmeturbe ja teoreetilise arvutiteaduse õppetool"}, "course_share_percent": 100, "coordinating": true}], "type": {"code": "regular", "et": "Tavaline aine", "en": "Regular course"}, "structural_units": [{"code": "LTAT04", "name": {"en": "Chair of Security and Theoretical Computer Science", "et": "andmeturbe ja teoreetilise arvutiteaduse õppetool"}, "level": 3, "academic": true, "supports_continuous_learning": false, "parent_code": "LTAT"}]}, "additional_info": {"duration_in_semesters": 1, "assessment_scale": {"code": "grade", "et": "Eristav (A, B, C, D, E, F, mi)", "en": "differentiated (A, B, C, D, E, F, not present)"}, "is_vota_course": true, "is_continuous_learning_course": false}, "overview": {"description": {"en": "The course covers the following topics: Fast Fourier Transform, fast multiplication of the polynomials using FFT, efficient algorithm for finding maximun flow in the network, max-flow in 0-1 network, finding min-cost maximum flow, linear programming, primal and dual problems, approximation algorithms for various combinatorial problems (set cover, travelling salesman problem, minimum feedback set problem), using linear-programming in approximation algorithms, primal-dual approach.", "et": "Kursuses käsitletakse järgmisi teemasid: kiire Fourier teisendus (FFT), polünoomide kiire korrutamine kasutades FFT, efektiivne algoritm maksimaalse voo arvutamiseks võrgus, maksimaalne voog 0-1 võrgus,   lineaarne planeerimine, otsene ja duaalne ülesanne, ligikaudsed algoritmid kombinatoorika mitmesuguste ülesannete (hulga katmine, rändkaupmehe ülesanne,...) jaoks kasutades lineaarset programmeerimist ligikaudsetes algoritmides ning otse-duaalne lähenemist."}, "objectives": [{"en": "Understand the variety of techniques for development and analysis of algorithms for various fundamental problems in computer science.", "et": "Saada aru arvutiteaduse põhiülesannete lahendamisel kasutatavate algoritmide arendamise ja analüüsimise erinevatest tehnikatest."}], "learning_outcomes": [{"en": "After completing this course, the student will be able:", "et": "Kursuse läbinu on võimeline:"}, {"en": "* to use various algorithmic techniques and concepts, such as fast Fourier transform, maximum flow in the networks, linear-programming, approximation algorithm techniques", "et": "* kasutama erinevaid algoritme, nt Fourier teisendus, maksimaalne voog võrkudes, lineaarne planeerimine, ligikaudsed algoritmid"}, {"en": "* to be able to analyze the time complexity of the algorithms, to prove their correctness, and to show approximation factor (for approximation algorithms)   ", "et": "* analüüsima algoritmide ajalist keerukust, tõestama nende korrektsust ja leidma ligikaudsuse hinnagut"}, {"en": "* to read and understand medium-difficulty mathematical and computer science texts in the area;", "et": "* aru saama keskmise raskusega matemaatilisest ja arvutiteaduse alasest tekstidest"}, {"en": "*\tto develop appropriate algorithms for a variety of applied problems, to analyze their performance and prove their correctness", "et": "* välja töötama sobivaid algoritme mitmesuguste rakendusülesannete jaoks, analüüsima nende jõudlust ja tõestama nende korrektsust"}]}, "_actions": {"is_version_creatable": false, "is_editable": false, "is_deletable": false}}