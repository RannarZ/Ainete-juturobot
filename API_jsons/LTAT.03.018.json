{"uuid": "2942f2f0-bd90-1f8d-9385-84a865f9f127", "state": {"code": "confirmed", "et": "Kinnitatud", "en": "confirmed"}, "last_update": "2025-02-27T15:38:32", "title": {"en": "Programming Language Foundations", "et": "Programmeerimiskeelte alused"}, "credits": 6, "credit_type": "ECTS", "target": {"year": {"code": "2025", "et": "2025/2026", "en": "2025/2026"}, "semester": {"code": "autumn", "et": "sügis", "en": "autumn"}, "study_type": {"code": "fulltime", "et": "päevaõpe", "en": "regular studies"}, "language": {"code": "en", "et": "inglise keel", "en": "English"}, "part": {"code": "0", "et": "Osadeta", "en": "None"}, "faculty": {"code": "LT", "name": {"en": "Faculty of Science and Technology", "et": "loodus- ja täppisteaduste valdkond"}, "address": "Tartu linn, \nTartu linn, Tartumaa \nEST", "city": "Tartu linn", "level": 1, "academic": true, "supports_continuous_learning": true}, "course_main_structural_unit": {"code": "LTAT03", "name": {"en": "Chair of Programming Languages and Systems", "et": "programmeerimiskeelte ja -süsteemide õppetool"}, "level": 3, "academic": true, "supports_continuous_learning": false, "parent_code": "LTAT"}, "label": {"en": "25/26 A regular LT Eng", "et": "25/26 S PÕ LT Eng"}}, "general": {"year": {"code": "2025", "et": "2025/2026", "en": "2025/2026"}, "input_languages": [{"code": "et", "et": "eesti keel", "en": "Estonian"}], "structural_unit_shares": [{"structural_unit_code": "LTAT03", "structural_unit_name": {"en": "Chair of Programming Languages and Systems", "et": "programmeerimiskeelte ja -süsteemide õppetool"}, "course_share_percent": 100, "coordinating": true}], "type": {"code": "regular", "et": "Tavaline aine", "en": "Regular course"}}, "additional_info": {"is_vota_course": true, "is_continuous_learning_course": false, "study_levels": [{"code": "bachelor", "et": "bakalaureuseõpe", "en": "bachelor's studies"}, {"code": "master", "et": "magistriõpe", "en": "master's studies"}, {"code": "doctoral", "et": "doktoriõpe", "en": "doctoral studies"}], "hours": {"lecture": 0, "practice": 0, "seminar": 64, "independent_work": 92, "individual_work": 0, "internship": 0}, "prerequisites": [{"required": false, "uuid": "2fe49029-a6b9-6bdc-ce03-c821ab8a9bc4", "code": "LTAT.03.005", "title": {"en": "Algorithms and Data Structures", "et": "Algoritmid ja andmestruktuurid"}, "credits": 6, "state": {"code": "confirmed", "et": "Kinnitatud", "en": "confirmed"}, "last_update": "2024-05-24T16:31:10"}], "is_enlight_course": true}, "overview": {"study_languages": [{"code": "en", "et": "inglise keel", "en": "English"}], "description": {"en": "We use material from \"The Software Foundations\" series Volume 1: \"Logical Foundations\" and Volume 2: \"Programming Language Foundations\". Volume 1 is an intro to Coq and logic and Volume 2 deals with properties of programming languages.\n\nList of chapters/topics: \"Logical Foundations\": Basics, Induction, Lists, Polymorphism, Tactics, Logics in Coq, Inductively defined Propositions, Maps, Simple Imperative Programs, More Automation. \"Programming Language Foundations\": Program Equivalence, Hoare Logic, Hoare Logic as a Logic, Small-step Operational Semantics, Type Systems, The Simply Typed Lambda-Calculus, Properties of STLC, More on the Simply Typed Lambda-Calculus, A Typechecker for STLC, Subtyping.\nA large part of the course is independent work where you study the material, solve exercises in Coq, and upload it to Moodle (automatic grading). Assisting seminar every week.", "et": "Kursus toimub \"Software Foundations\" materjalide põhjal, kus kaetakse Volume 1: \"Logical Foundations\" ja Volume 2: \"Programming Language Foundations\". Esimene raamat katab Coq-i algõpet ja loogika aluseid, teine tegeleb programmide ja programmeerimiskeelte  omaduste tõestamisega. Peatükkide/teemade loetelu: \"Logical Foundations\": Basics, Induction, Lists, Polymorphism, Tactics, Logics in Coq, Inductively defined Propositions, Maps, Simple Imperative Programs, More Automation. \"Programming Language Foundations\": Program Equivalence, Hoare Logic, Hoare Logic as a Logic, Small-step Operational Semantics, Type Systems, The Simply Typed Lambda-Calculus, Properties of STLC, More on the Simply Typed Lambda-Calculus, A Typechecker for STLC, Subtyping.\nSuure osa kursusest moodustab iseseisev töö: loete materjali, lahendate Coq-is ülesandeid ja laete lahendused hindamiseks Moodle-sse (automaatkontroll). Abiks iganädalane seminar."}, "objectives": [{"en": "Provide students with:", "et": "Anda tudengitele:"}, {"en": "a) a better understanding of formal proofs,", "et": "a) parem arusaam formaalsetest tõestustest,"}, {"en": "b) practical ability to prove something in Coq,", "et": "b) praktiline oskus Coq-iga midagi tõestada,"}, {"en": "c) ability to prove properties of programs,", "et": "c) oskus tõestada programmide omadusi ja"}, {"en": "d) overview how proving properties of type systems can prove properties of programming languages.", "et": "d) ülevaade kuidas programmeerimiskeele tüübisüsteemi omaduste tõestamise kaudu tõestada selle keele omadusi."}], "learning_outcomes": [{"en": "A student, that has completed the course:", "et": "Kursuse läbinud tudeng:"}, {"en": "a) knows common concepts of logic, proofs, and type theory,", "et": "a) teab loogika, tõestamise ja tüübiteooria põhimõisteid, "}, {"en": "b) is able to understands the meaning of propositions written in Coq,", "et": "b) saab aru Coq süsteemis kirjutatud väidete sisust,"}, {"en": "c) can prove simple propositions in Coq, and", "et": "c) oskab Coq-is tõestada lihtsaid väiteid,"}, {"en": "d) can prove simple properties of programs using Floyd-Hoare logic,", "et": "d) oskab tõestada programmide omadusi Floyd-Hoare loogikaga,"}, {"en": "e) can prove type preservation and progress for simply typed lambda calculus.", "et": "e) oskab tõestada lihtsalt tüübitud lambda arvutuse kohta tüübi säilimist ja progressi."}], "notes": {}}, "grading": {"independent_work": {"et": "Iga peatüki kohta on ülesanded, mille peab esitama.\n\nPeatükkide nimekiri Moodles."}, "independent_work_assessments": [{"work_type": {"code": "homework", "et": "Kodutöö", "en": "home work"}, "description": {"et": "Iga kodutöö annab maksimaalselt 2 kuni 5 punkti. Täispunktid, kui a) automaatkontroll nõustub tõestusega ja b) on esitatud õigeaegselt. Korrektse lahenduse hilisemal esitamisel kaotate pooled punktid."}}, {"work_type": {"code": "combined", "et": "Suuline ja kirjalik (kombineeritud) lõpphindamine", "en": "final oral and written (combined) assessment"}, "description": {"et": "Täispunktid (30p) kui kõik harjutused on automaatselt kontrollitud Coq-i poolt. Suuline vestlus küsimuste või ebakorrektsete/puuduvate ülesannete puhul."}}], "min_points_from_tests": 0, "grade_preconditions": {"et": "tingimused puuduvad"}, "grade_evaluation": {"et": "Kodutöö (maks 70) ja eksam (maks 30) punktid liidetakse. Kodutöö täispunktid ei pruugi kokku anda täpselt 70 kui meil kõiki peatükke teha ei õnnestu.\n\n91%..100% -> A, 81%..90% -> B, 71%..80% -> C, 61%..70% -> D, 51%..60% -> E, 0%..50% -> F \n\nPunktid ümardatakse üles."}, "debt_elimination": {"et": "erandjuhul; väike hulk lisaülesandeid"}, "assessment_scale": {"code": "grade", "et": "Eristav (A, B, C, D, E, F, mi)", "en": "differentiated (A, B, C, D, E, F, not present)"}, "results_available_from": {}}, "resources": {"web_based": {"code": "2", "et": "põimõpe", "en": "blended learning"}, "website_url": "http://moodle.ut.ee", "is_moodle_connected": false}, "participants": {"lecturers": [{"person_uuid": "6d17e9cd-42c7-b1e5-ca2f-a615b53a1721", "person_name": "Kalmer Apinis", "structural_unit": {"code": "LTAT03", "name": {"en": "Chair of Programming Languages and Systems", "et": "programmeerimiskeelte ja -süsteemide õppetool"}, "level": 3, "academic": true, "supports_continuous_learning": false, "parent_code": "LTAT"}, "is_responsible": true, "is_teaching": true}], "assistants": ["fc441e0d-db5c-25e3-a315-f9f0bd127e6f"]}, "schedule": {"weeks": {"et": "1-16 study weeks"}, "entries": [{"course_week": 1, "work_type": {"code": "seminar", "et": "seminar", "en": "seminar"}, "topic_number": 1, "topic": {}, "description": {"et": "\t1. Logical Foundations Basics, Induction,\n2. Lists, Polymorphism,\n3. Tactics, Logics in Coq\n4. Inductively defined Propositions, Proof objects\n5. Maps\n6. Simple Imperative Programs, More Automation.\n7. Program Equivalence,\n8. Hoare Logic I,\n9. Hoare Logic II,\n10. Small-step Operational Semantics,\n11. Type Systems,\n12. The Simply Typed Lambda-Calculus,\n13. Properties of STLC,\n14*. More on the Simply Typed Lambda-Calculus,\n15*. A Typechecker for STLC,\n16*. Subtyping."}}]}, "registration_info": {"audience": {}, "min_students": 8}, "parent_uuid": "ffba2741-d197-d72a-072e-95a066c52476", "parent_code": "LTAT.03.018", "parent_credits": 6, "_actions": {"is_moodle_editable": false, "is_editable": false, "is_deletable": false}}