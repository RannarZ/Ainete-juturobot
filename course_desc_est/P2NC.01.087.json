{"KURSUSE_NIMI": "Digitaalloogika ja -süsteemid", "KURSUSE_KOOD": "P2NC.01.087", "EAP": 2, "KURSUSE_TYYP": "Tavaline aine", "KURSUSE_KEELED": ["eesti keel"], "VOTA": true, "SEMESTER": "kevad", "OPPETYYP": "päevaõpe", "TUNDIDE_JAOTUS": {"lecture": 16, "practice": 6, "seminar": 0, "colloquium": 0, "web_learning": 0, "independent_work": 30, "individual_work": 0, "internship": 0}, "HINDAMISSKAALA": "pass", "KIRJELDUS": "Sissejuhatus kahend-loogikasse, selle kasutamine digitaalsüsteemides. Loogikafunktsioonide esitamine ning täpne ja heuristiline minimeerimine. Mäluga süsteemid, mäluelemendid, automaadid. Automaatide realiseerimine ja minimeerimine. Tutvumine riistvara kirjelduskeelega VHDL, selle kasutamine digitaalsüsteemide modelleerimisel. Ülevaade loogikaelementide peredest. Ülevaade kompleksetest digitaalsüsteemidest ja nende projekteerimise metoodikatest erinevatel abstraktsioonitasemetelObjectives/eesmärkid:  Anda ülevaade mineviku mikroskeemidest ja sardsüsteemidest ning kaasaegsete projekteerimise käikudest, meetoditest ja vahenditest, digitaalsüsteemide modelleerimisest, riistvara kirjelduskeelest VHDL. Õpetada riistvara kirjelduskeele kasutamist erinevatel disaini- ja abstraktsioonitasemetel, eeskätt FPGA riistvaral.Learning outcomes/õpiväljund:  Kursuse läbinud üliõpilane: \n\noskab opereerida erinevate numbrisüsteemide ja loogikaväratitega ning neid praktikas rakendada. \n\nrakendab kuni 4 sisendiga funktsiooni teisendamist Karnaugh kaardi abil. On tuttav Booleani loogika ning Venni diagrammidega \n\n teab erinevaid puhvreid, summaatoreid, (de)koodreid, (de)multipleksereid, koodimuundajaid, lukustavaid mäluelemente, trigereid, registreid ja komparaatoreid. \n\nvõrdleb erinevaid mikroskeemi tüüpe (PLA, PAL, ASIC, CPLD JA FPGA) ning valida neist praktikas sobilikuma. \n\nkasutab FPGA programmeerimiseks kasutatavat CAD vahendit Xilinx ISE. \n\n iseseisvalt tegeleda VHDL keeles lihtsamate ülesannete programmeerimisega (k.a. visuaalprogrammeerimine) FPGA riistvarale ning leida tekkinud küsimustele iseseisvalt lahendusi. Lisaks suudab kirjutada lahendusele simulatsiooni ja seda analüüsida. \n\nanalüüsib ja hindab valmis VHDL koodi, suudab seda kohaseid meetodeid ja vahendeid kasutades iseseisvalt edasi arendada, teab vahendeid millega saab VHDL koodi muuta kiiremaks või energiasäästlikumaks"}